@model WasteAway.ViewModels.RouteViewModel
@{
    ViewBag.Title = "GetRoute";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Get Route</h2>

@using (Html.BeginForm("GetRoute", "Route", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Select Truck Form</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(m => m.TruckId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.TruckId,
                new SelectList(Model.Trucks, "Id", "Number"),
                "",
                new { @class = "form-control", autofocus = "autofocus" })
            @Html.ValidationMessageFor(m => m.TruckId)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Select Truck" class="btn btn-default" />
        </div>
    </div>
    <p>
        @Html.ActionLink("Back to home page.", "Index", "Home")
    </p>
}
<script>
          function initialize()
         {
            geocoder = new google.maps.Geocoder();
      var latlng = new google.maps.LatLng(43.3872, -87.8756);
      var mapOptions =
      {
        zoom: 15,
        center: latlng
      }
      map = new google.maps.Map(document.getElementById('Truck Route'), mapOptions);
      codeAddress();
          }
    </script>
    <script> 
    function Address(address)
    {
    geocoder.geocode( {address:address}, function(results, status)
    {
    if (status == google.maps.GeocoderStatus.OK)
    {
    map.setCenter(results[0].geometry.location);
    
    var marker = new google.maps.Marker(
    {
    map: map,
    position: results[0].geometry.location
    });
    } else {
      alert('Geocode was not successful for the following reason: ' + status);    
    }
    });
    }
    </script>

    <script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyClwtEuYnCM7X2XwMdR9x4D56tbw5KehIM&callback=initMap">
    </script>

